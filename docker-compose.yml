version: '3.8'

services:
  # API service (NestJS)
  api:
    build:
      context: . # Chỉ định thư mục hiện tại làm context build
      dockerfile: Dockerfile # Chỉ định rõ Dockerfile
    ports:
      - '8080:8080' # Mở cổng 8080 cho API
    env_file:
      - .env # Nạp các biến môi trường từ file .env
    depends_on:
      - db # Đảm bảo db được khởi động trước khi api chạy
      - redis # Đảm bảo redis được khởi động trước khi api chạy
    networks:
      - app-network # Kết nối vào mạng app-network
    restart: always # Đảm bảo service luôn tự động khởi động lại khi có lỗi

  # Database service (PostgreSQL)
  db:
    image: postgres:17 # Dùng image PostgreSQL phiên bản 17
    environment:
      POSTGRES_USER: ${DB_USER} # Đặt biến người dùng cho PostgreSQL
      POSTGRES_PASSWORD: ${DB_PASS} # Đặt mật khẩu cho PostgreSQL
      POSTGRES_DB: ${minimart_db} # Đặt tên database
    ports:
      - '${DB_PORT}:5432' # Mở cổng 5432 cho PostgreSQL
    volumes:
      - pgdata:/var/lib/postgresql/data # Lưu trữ dữ liệu database vào volume
    networks:
      - app-network # Kết nối vào mạng app-network
    restart: always # Đảm bảo service luôn tự động khởi động lại khi có lỗi

  # Redis service
  redis:
    image: redis:latest # Sử dụng Redis mới nhất
    ports:
      - '6379:6379' # Mở cổng 6379 cho Redis
    networks:
      - app-network # Kết nối vào mạng app-network
    restart: always # Đảm bảo service luôn tự động khởi động lại khi có lỗi

# Định nghĩa volumes để lưu trữ dữ liệu PostgreSQL
volumes:
  pgdata:
    driver: local # Sử dụng driver local để lưu trữ dữ liệu

# Định nghĩa mạng riêng cho các dịch vụ giao tiếp với nhau
networks:
  app-network:
    driver: bridge # Sử dụng mạng bridge để kết nối các container
